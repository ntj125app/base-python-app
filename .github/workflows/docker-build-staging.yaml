name: Build App Container Image for Staging

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-app: # Steps to build staging application
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io # GitHub Container Registry
      IMAGE_NAME: ${{ github.repository }} # github.repository as <account>/<repo>
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout # Checkout the repository
        uses: actions/checkout@v4

      - name: Setup QEMU # Setup QEMU
        uses: docker/setup-qemu-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
      - name: Setup Docker Buildx # Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''

      - name: Login to GitHub Container Registry # Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get & Set Container Metadata # Get & Set Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v5
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Clean Build App # Remove unused files & dirs
        run: rm -rf .git .github
      - name: Build & Push Container # Build & Push Container
        uses: docker/build-push-action@v5
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}-staging
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
